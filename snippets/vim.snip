"perforce
snippet log
	call <SID>logFile('p4log')
"main
snippet map
    map ${1}|"
"Unite 
snippet kind
    "kind - ${1} "{{{
    let s:kind = { 'name' : '$1',
        \ 'default_action' : '${2}',
        \ 'action_table' : {},
        \ 'parents' : [],
        \ }
    call unite#define_kind(s:kind) "}}}
    unlet s:kind 
snippet action
	"action - ${1} "{{{
	let s:action = { 
				\ 'is_selectable' : 1, 
				\ 'description' : '${2}',
				\ }
	call unite#custom_action('${3:file}', '$1', s:action)
    function! s:action.func(candidates) "{{{
        for l:candidate in a:candidates
        endfor
    endfunction "}}}
    unlet s:action "}}}
snippet kaction
	"kind action - ${1} "{{{
	let s:kind.action_table.$1 = {
		\ 'description' : '',
		\ 'is_selectable' : 1,
		\ }
	function! s:kind.action_table.$1.func(candidates) "{{{
		for candidate in a:candidates
		endfor
	endfunction "}}}
	"}}}
snippet source
    "source - ${1} "{{{
    let s:source = {
                \ 'name' : '$1',
                \ 'description' : '',
                \ }
                "\ 'default_action' : '',
    call unite#define_source(s:source)
    function! s:source.gather_candidates(args, context) "{{{
        let datas = ${2}
        let candidates = map( datas, "{
                    \ 'word' : v:val,
                    \ 'kind' : 'file',
                    \ }")
        return candidates
    endfunction "}}}
    unlet s:source "}}}
snippet function!
    function! ${1}(${2}) "{{{

    endfunction "}}}
snippet sources
    function! unite#sources#${1}#define()
        return s:source
    endfunction
snippet kinds
    function! unite#kinds#${1}#define()
        return s:kind
    endfunction
snippet head
	" ********************************************************************************
	" ${1}
	" @param[in]	
    " @retval       
	" ********************************************************************************
    function! ${2}(${3}) "{{{
    endfunction "}}}

